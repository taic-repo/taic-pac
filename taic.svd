<?xml version="1.0" encoding="utf-8"?>

<device schemaVersion="1.3"
  xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
  xs:noNamespaceSchemaLocation="cmsis-svd.xsd">
  <name>TAIC</name>
  <version>0.0</version>
  <description>Task-Aware interrupt controller description.</description>

  <addressUnitBits>8</addressUnitBits>                  <!-- byte addressable memory -->
  <width>64</width>                                     <!-- bus width is 64 bits -->
  <size>64</size>   <!-- this is the default size (number of bits) of all peripherals
                        and register that do not define "size" themselves -->
  <resetValue>0x0000000000000000</resetValue>   <!-- by default all bits of the registers are initialized to 0 on reset -->
  <resetMask>0xFFFFFFFFFFFFFFFF</resetMask>     <!-- by default all 32Bits of the registers are used -->
  <peripherals>
    <peripheral>
      <name>TAIC</name>
      <description>Task-Aware interrupt controller description.</description>
      <baseAddress>0x1000000</baseAddress>      <!-- mmio baseaddr -->
      <size>64</size>       <!-- default bit-width of any register contained in the device -->
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1000000</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
				<register>
					<name>alq</name>
					<description>Alloc a local ready queue.</description>
					<addressOffset>0x00</addressOffset>
					<access>read-write</access>
					<dataType>uint64_t</dataType>
				</register>
				<register>
					<name>flq</name>
					<description>Free a local ready queue.</description>
					<addressOffset>0x08</addressOffset>
					<access>write-only</access>
					<dataType>uint64_t</dataType>
				</register>
        <cluster>
          <dim>0x100</dim>
          <dimIncrement>0x8</dimIncrement>
          <dimName>sim_extint</dimName>
          <name>sim_extint_%s</name>
          <description>Simulate an external interrupt</description>
          <addressOffset>0x10</addressOffset>
          <access>write-only</access>

          <register>
            <name>sim_extint</name>
            <description>Simulate an external interrupt.</description>
            <addressOffset>0x00</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>
        </cluster>

        <cluster>
          <dim>0x100</dim>
          <dimIncrement>0x1000</dimIncrement>
          <dimName>lqs</dimName>
          <name>lq_%s</name>
          <description>Related registers space of per local queue</description>
          <addressOffset>0x1000</addressOffset>
          <access>read-write</access>

          <register>
            <name>task_enqueue</name>
            <description>Add task into the local ready queue.</description>
            <addressOffset>0x00</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>task_dequeue</name>
            <description>Fetch a task from the local ready queue.</description>
            <addressOffset>0x08</addressOffset>
            <access>read-only</access>
            <fields>
              <field>
                <name>tcb</name>
                <description>The pointer of task control block.</description>
                <bitRange>[64:6]</bitRange>
              </field>
							<field>
                <name>priority</name>
                <description>The priority attribute about task.</description>
                <bitRange>[5:1]</bitRange>
              </field>
							<field>
                <name>is_preempt</name>
                <description>The preempt attribute about task.</description>
                <bitRange>[0:0]</bitRange>
              </field>
            </fields>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_sender</name>
            <description>Register send capability.</description>
            <addressOffset>0x18</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>cancel_sender</name>
            <description>Cancel send capability.</description>
            <addressOffset>0x20</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_receiver</name>
            <description>Register receive capability.</description>
            <addressOffset>0x28</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>send_intr</name>
            <description>Send interrupt to receiver.</description>
            <addressOffset>0x30</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>whart</name>
            <description>Write the hartid about the local queue.</description>
            <addressOffset>0x38</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>
          <cluster>
            <dim>0x100</dim>
            <dimIncrement>0x8</dimIncrement>
            <dimName>register_extint</dimName>
            <name>register_extint_%s</name>
            <description>Register about external interrupt</description>
            <addressOffset>0x40</addressOffset>
            <access>write-only</access>

            <register>
              <name>register_extint</name>
              <description>Register external interrupt handler.</description>
              <addressOffset>0x00</addressOffset>
              <access>write-only</access>
              <dataType>uint64_t</dataType>
            </register>
          </cluster>
                    
        </cluster>
      </registers>
    </peripheral>
  </peripherals>

</device>